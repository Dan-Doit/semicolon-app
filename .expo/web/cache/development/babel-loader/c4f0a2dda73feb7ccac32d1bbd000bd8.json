{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\EMBEDED\\\\Final_Project\\\\semicolon_app\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { Ionicons } from '@expo/vector-icons';\nimport { AppLoading, Font } from \"expo\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loaded = _useState2[0],\n      setLoaded = _useState2[1];\n\n  var preLoad = function preLoad() {\n    return _regeneratorRuntime.async(function preLoad$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Font.loadAsync(_objectSpread({}, Ionicons.font)));\n\n          case 3:\n            setLoaded(true);\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 9:\n            useEffect(function () {\n              preLoad();\n            }, []);\n            return _context.abrupt(\"return\", loaded ? React.createElement(View, {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 7\n              }\n            }, React.createElement(Text, {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 9\n              }\n            }, \"Open up App.js to start working on your app!\")) : React.createElement(AppLoading, {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 9\n              }\n            }));\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n}","map":{"version":3,"sources":["D:/EMBEDED/Final_Project/semicolon_app/App.js"],"names":["React","useState","useEffect","Ionicons","AppLoading","Font","App","loaded","setLoaded","preLoad","loadAsync","font","console","log"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,MAAjC;;;AAGA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAAA,kBACAL,QAAQ,CAAC,KAAD,CADR;AAAA;AAAA,MACrBM,MADqB;AAAA,MACbC,SADa;;AAE5B,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAENJ,IAAI,CAACK,SAAL,mBACDP,QAAQ,CAACQ,IADR,EAFM;;AAAA;AAKZH,YAAAA,SAAS,CAAC,IAAD,CAAT;AALY;AAAA;;AAAA;AAAA;AAAA;AAOZI,YAAAA,OAAO,CAACC,GAAR;;AAPY;AASdX,YAAAA,SAAS,CAAC,YAAM;AACdO,cAAAA,OAAO;AACR,aAFQ,EAEN,EAFM,CAAT;AATc,6CAYPF,MAAM,GACX,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DADF,CADW,GAKT,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;AAoBD","sourcesContent":["import React, { useState ,useEffect} from 'react';\nimport { Ionicons } from '@expo/vector-icons';\nimport { AppLoading, Font } from \"expo\";\nimport { Text, View } from 'react-native';\n\nexport default function App() {\n  const [loaded, setLoaded] = useState(false);\n  const preLoad = async () => {\n    try {\n      await Font.loadAsync({\n        ...Ionicons.font\n      });\n      setLoaded(true);\n    } catch (e) {\n      console.log(e);\n    }\n    useEffect(() => {\n      preLoad();\n    }, []);\n    return loaded ? (\n      <View>\n        <Text>Open up App.js to start working on your app!</Text>\n      </View>\n    ) : (\n        <AppLoading />\n      );\n  }\n}"]},"metadata":{},"sourceType":"module"}