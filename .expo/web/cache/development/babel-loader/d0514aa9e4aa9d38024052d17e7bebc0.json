{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\EMBEDED\\\\Final_Project\\\\semicolon_app\\\\components\\\\UserProfile.js\";\n\nfunction _templateObject11() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n\"]);\n\n  _templateObject11 = function _templateObject11() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  width: \", \";\\n  align-items: center;\\n\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  padding-vertical: 5px;\\n  border: 1px solid \", \";\\n  flex-direction: row;\\n  margin-top: 30px;\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteralLoose([\"\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  margin-top: 10px;\\n  padding-horizontal: 20px;\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  margin-top: 5px;\\n  font-size: 12px;\\n  color: \", \";\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  font-weight: 600;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  align-items: center;\\n  margin-left: 40px;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  flex-direction: row;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  padding: 20px;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  align-items: center;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styled from \"styled-components\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport PropTypes from \"prop-types\";\nimport styles from \"../styles\";\nimport { Platform } from \"@unimodules/core\";\nimport constants from \"../Constants\";\nimport SquarePhoto from \"./SquarePhoto\";\nimport Post from \"./Post\";\nvar ProfileHeader = styled.View(_templateObject());\nvar HeaderColumn = styled.View(_templateObject2());\nvar ProfileStats = styled.View(_templateObject3());\nvar Stat = styled.View(_templateObject4());\nvar Bold = styled.Text(_templateObject5());\nvar StatName = styled.Text(_templateObject6(), styles.darkGreyColor);\nvar ProfileMeta = styled.View(_templateObject7());\nvar Bio = styled.Text(_templateObject8());\nvar ButtonContainer = styled.View(_templateObject9(), styles.lightGreyColor);\nvar Button = styled.View(_templateObject10(), constants.width / 2);\nvar SquareContainer = styled.View(_templateObject11());\n\nvar UserProfile = function UserProfile(_ref) {\n  var avatar = _ref.avatar,\n      postsCount = _ref.postsCount,\n      followersCount = _ref.followersCount,\n      followingCount = _ref.followingCount,\n      bio = _ref.bio,\n      fullName = _ref.fullName,\n      posts = _ref.posts;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isGrid = _useState2[0],\n      setIsGrid = _useState2[1];\n\n  var toggleGrid = function toggleGrid() {\n    return setIsGrid(function (i) {\n      return !i;\n    });\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, React.createElement(ProfileHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: {\n      height: 80,\n      width: 80,\n      borderRadius: 40\n    },\n    source: {\n      uri: avatar\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), React.createElement(HeaderColumn, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, React.createElement(ProfileStats, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, React.createElement(Stat, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, React.createElement(Bold, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, postsCount), React.createElement(StatName, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, \"Posts\")), React.createElement(Stat, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, React.createElement(Bold, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, followersCount), React.createElement(StatName, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, \"Followers\")), React.createElement(Stat, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, React.createElement(Bold, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, followingCount), React.createElement(StatName, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, \"Following\"))))), React.createElement(ProfileMeta, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, React.createElement(Bold, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, fullName), React.createElement(Bio, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, bio)), React.createElement(ButtonContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: toggleGrid,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, React.createElement(Ionicons, {\n    color: isGrid ? styles.black : styles.darkGreyColor,\n    size: 32,\n    name: Platform.OS === \"ios\" ? \"ios-grid\" : \"md-grid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }))), React.createElement(TouchableOpacity, {\n    onPress: toggleGrid,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, React.createElement(Ionicons, {\n    color: !isGrid ? styles.black : styles.darkGreyColor,\n    size: 32,\n    name: Platform.OS === \"ios\" ? \"ios-list\" : \"md-list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  })))), React.createElement(SquareContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, posts && posts.map(function (p) {\n    return isGrid ? React.createElement(SquarePhoto, _extends({\n      key: p.id\n    }, p, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 36\n      }\n    })) : null;\n  })), posts && posts.map(function (p) {\n    return isGrid ? null : React.createElement(Post, _extends({\n      key: p.id\n    }, p, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 49\n      }\n    }));\n  }));\n};\n\nUserProfile.propTypes = {\n  id: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n  fullName: PropTypes.string.isRequired,\n  isFollowing: PropTypes.bool.isRequired,\n  isSelf: PropTypes.bool.isRequired,\n  bio: PropTypes.string.isRequired,\n  followingCount: PropTypes.number.isRequired,\n  followersCount: PropTypes.number.isRequired,\n  postsCount: PropTypes.number.isRequired,\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    user: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      avatar: PropTypes.string,\n      username: PropTypes.string.isRequired\n    }).isRequired,\n    files: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired\n    })).isRequired,\n    likeCount: PropTypes.number.isRequired,\n    isLiked: PropTypes.bool.isRequired,\n    comments: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n      user: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        username: PropTypes.string.isRequired\n      }).isRequired\n    })).isRequired,\n    caption: PropTypes.string.isRequired,\n    location: PropTypes.string,\n    createdAt: PropTypes.string.isRequired\n  }))\n};\nexport default UserProfile;","map":{"version":3,"sources":["D:/EMBEDED/Final_Project/semicolon_app/components/UserProfile.js"],"names":["React","useState","styled","Ionicons","PropTypes","styles","Platform","constants","SquarePhoto","Post","ProfileHeader","View","HeaderColumn","ProfileStats","Stat","Bold","Text","StatName","darkGreyColor","ProfileMeta","Bio","ButtonContainer","lightGreyColor","Button","width","SquareContainer","UserProfile","avatar","postsCount","followersCount","followingCount","bio","fullName","posts","isGrid","setIsGrid","toggleGrid","i","height","borderRadius","uri","black","OS","map","p","id","propTypes","string","isRequired","username","isFollowing","bool","isSelf","number","arrayOf","shape","user","files","url","likeCount","isLiked","comments","text","caption","location","createdAt"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Image, View, TouchableOpacity } from \"react-native\";\r\nimport styled from \"styled-components\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../styles\";\r\nimport { Platform } from \"@unimodules/core\";\r\nimport constants from \"../Constants\";\r\nimport SquarePhoto from \"./SquarePhoto\";\r\nimport Post from \"./Post\";\r\n\r\nconst ProfileHeader = styled.View`\r\n  padding: 20px;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\nconst HeaderColumn = styled.View``;\r\n\r\nconst ProfileStats = styled.View`\r\n  flex-direction: row;\r\n`;\r\n\r\nconst Stat = styled.View`\r\n  align-items: center;\r\n  margin-left: 40px;\r\n`;\r\n\r\nconst Bold = styled.Text`\r\n  font-weight: 600;\r\n`;\r\n\r\nconst StatName = styled.Text`\r\n  margin-top: 5px;\r\n  font-size: 12px;\r\n  color: ${styles.darkGreyColor};\r\n`;\r\n\r\nconst ProfileMeta = styled.View`\r\n  margin-top: 10px;\r\n  padding-horizontal: 20px;\r\n`;\r\n\r\nconst Bio = styled.Text``;\r\n\r\nconst ButtonContainer = styled.View`\r\n  padding-vertical: 5px;\r\n  border: 1px solid ${styles.lightGreyColor};\r\n  flex-direction: row;\r\n  margin-top: 30px;\r\n`;\r\n\r\nconst Button = styled.View`\r\n  width: ${constants.width / 2};\r\n  align-items: center;\r\n`;\r\n\r\nconst SquareContainer = styled.View`\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst UserProfile = ({\r\n  avatar,\r\n  postsCount,\r\n  followersCount,\r\n  followingCount,\r\n  bio,\r\n  fullName,\r\n  posts\r\n}) => {\r\n  const [isGrid, setIsGrid] = useState(true);\r\n  const toggleGrid = () => setIsGrid(i => !i);\r\n  return (\r\n    <View>\r\n      <ProfileHeader>\r\n        <Image\r\n          style={{ height: 80, width: 80, borderRadius: 40 }}\r\n          source={{ uri: avatar }}\r\n        />\r\n        <HeaderColumn>\r\n          <ProfileStats>\r\n            <Stat>\r\n              <Bold>{postsCount}</Bold>\r\n              <StatName>Posts</StatName>\r\n            </Stat>\r\n            <Stat>\r\n              <Bold>{followersCount}</Bold>\r\n              <StatName>Followers</StatName>\r\n            </Stat>\r\n            <Stat>\r\n              <Bold>{followingCount}</Bold>\r\n              <StatName>Following</StatName>\r\n            </Stat>\r\n          </ProfileStats>\r\n        </HeaderColumn>\r\n      </ProfileHeader>\r\n      <ProfileMeta>\r\n        <Bold>{fullName}</Bold>\r\n        <Bio>{bio}</Bio>\r\n      </ProfileMeta>\r\n      <ButtonContainer>\r\n        <TouchableOpacity onPress={toggleGrid}>\r\n          <Button>\r\n            <Ionicons\r\n              color={isGrid ? styles.black : styles.darkGreyColor}\r\n              size={32}\r\n              name={Platform.OS === \"ios\" ? \"ios-grid\" : \"md-grid\"}\r\n            />\r\n          </Button>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={toggleGrid}>\r\n          <Button>\r\n            <Ionicons\r\n              color={!isGrid ? styles.black : styles.darkGreyColor}\r\n              size={32}\r\n              name={Platform.OS === \"ios\" ? \"ios-list\" : \"md-list\"}\r\n            />\r\n          </Button>\r\n        </TouchableOpacity>\r\n      </ButtonContainer>\r\n      <SquareContainer>\r\n        {posts &&\r\n          posts.map(p => (isGrid ? <SquarePhoto key={p.id} {...p} /> : null))}\r\n      </SquareContainer>\r\n      {posts && posts.map(p => (isGrid ? null : <Post key={p.id} {...p} />))}\r\n    </View>\r\n  );\r\n};\r\n\r\nUserProfile.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  fullName: PropTypes.string.isRequired,\r\n  isFollowing: PropTypes.bool.isRequired,\r\n  isSelf: PropTypes.bool.isRequired,\r\n  bio: PropTypes.string.isRequired,\r\n  followingCount: PropTypes.number.isRequired,\r\n  followersCount: PropTypes.number.isRequired,\r\n  postsCount: PropTypes.number.isRequired,\r\n  posts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      user: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        avatar: PropTypes.string,\r\n        username: PropTypes.string.isRequired\r\n      }).isRequired,\r\n      files: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          id: PropTypes.string.isRequired,\r\n          url: PropTypes.string.isRequired\r\n        })\r\n      ).isRequired,\r\n      likeCount: PropTypes.number.isRequired,\r\n      isLiked: PropTypes.bool.isRequired,\r\n      comments: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          id: PropTypes.string.isRequired,\r\n          text: PropTypes.string.isRequired,\r\n          user: PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            username: PropTypes.string.isRequired\r\n          }).isRequired\r\n        })\r\n      ).isRequired,\r\n      caption: PropTypes.string.isRequired,\r\n      location: PropTypes.string,\r\n      createdAt: PropTypes.string.isRequired\r\n    })\r\n  )\r\n};\r\nexport default UserProfile;"]},"metadata":{},"sourceType":"module"}