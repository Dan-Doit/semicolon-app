{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\EMBEDED\\\\Final_Project\\\\semicolon_app\\\\components\\\\NavController.js\";\n\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar logUserIn = function logUserIn() {\n  return _regeneratorRuntime.async(function logUserIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"isLoggedIn\", \"true\"));\n\n        case 3:\n          setIsLoggedIn(true);\n          _context.next = 9;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\n\nvar logUserOut = function logUserOut() {\n  return _regeneratorRuntime.async(function logUserOut$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"isLoggedIn\", \"false\"));\n\n        case 3:\n          setIsLoggedIn(false);\n          _context2.next = 9;\n          break;\n\n        case 6:\n          _context2.prev = 6;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\n\nexport default (function () {\n  return React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }\n  }, \" \", React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 19\n    }\n  }, isLoggedIn === true ? React.createElement(TouchableOpacity, {\n    onPress: logUserOut,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, \"Log Out ? (\\u261E\\uFF9F\\u30EE\\uFF9F)\\u261E \", React.createElement(AntDesign, {\n    name: \"staro\",\n    size: 24,\n    color: \"black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 35\n    }\n  }))) : React.createElement(TouchableOpacity, {\n    onPress: logUserIn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Log In, plz \\u0CA5_\\u0CA5 \", React.createElement(AntDesign, {\n    name: \"star\",\n    size: 24,\n    color: \"black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 33\n    }\n  })))));\n});","map":{"version":3,"sources":["D:/EMBEDED/Final_Project/semicolon_app/components/NavController.js"],"names":["React","logUserIn","AsyncStorage","setItem","setIsLoggedIn","console","log","logUserOut","flex","justifyContent","alignItems","isLoggedIn"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEC,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEPC,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,MAAnC,CAFO;;AAAA;AAGbC,UAAAA,aAAa,CAAC,IAAD,CAAb;AAHa;AAAA;;AAAA;AAAA;AAAA;AAKbC,UAAAA,OAAO,CAACC,GAAR;;AALa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;;AASC,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAETL,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,OAAnC,CAFS;;AAAA;AAGfC,UAAAA,aAAa,CAAC,KAAD,CAAb;AAHe;AAAA;;AAAA;AAAA;AAAA;AAKfC,UAAAA,OAAO,CAACC,GAAR;;AALe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;;AASF,gBAAe,YAAM;AACjB,SAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAO,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEE,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,cAAc,EAAE,QAA3B;AAAqCC,MAAAA,UAAU,EAAE;AAAjD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACXC,UAAU,KAAK,IAAf,GAEC,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEJ,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAAwB,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,OAAhB;AAAwB,IAAA,IAAI,EAAE,EAA9B;AAAkC,IAAA,KAAK,EAAC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,CADF,CAFD,GAQC,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEN,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAsB,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,MAAhB;AAAuB,IAAA,IAAI,EAAE,EAA7B;AAAiC,IAAA,KAAK,EAAC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtB,CADF,CATU,CAAP,CAAP;AAeH,CAhBD","sourcesContent":["import React from \"react\";\r\nimport { Text, TouchableOpacity, View } from 'react-native';\r\n const logUserIn = async () => {\r\n    try {\r\n      await AsyncStorage.setItem(\"isLoggedIn\", \"true\");\r\n      setIsLoggedIn(true);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n    }\r\n  \r\n  const logUserOut = async () => {\r\n    try {\r\n      await AsyncStorage.setItem(\"isLoggedIn\", \"false\");\r\n      setIsLoggedIn(false);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n}\r\n  \r\nexport default () => {\r\n    return <Text> <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n      {isLoggedIn === true ?\r\n        //로그인됐을때\r\n        <TouchableOpacity onPress={logUserOut}>\r\n          <Text>Log Out ? (☞ﾟヮﾟ)☞ <AntDesign name=\"staro\" size={24} color=\"black\" /> \r\n          </Text>\r\n        </TouchableOpacity>\r\n        :\r\n        //로그아웃됐을때\r\n        <TouchableOpacity onPress={logUserIn}>\r\n          <Text>Log In, plz ಥ_ಥ <AntDesign name=\"star\" size={24} color=\"black\" /></Text>\r\n        </TouchableOpacity>\r\n        \r\n      }  \r\n        </View></Text>\r\n}"]},"metadata":{},"sourceType":"module"}